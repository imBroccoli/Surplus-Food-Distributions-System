"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-az7^#0ir7u5@3n@w7mmcfcxmp_wf5qh5=!zjsgt2g&$b-o)#16"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Site Configuration
SITE_ID = 1
SITE_NAME = 'Surplus Food Distribution'
SITE_DOMAIN = 'localhost:8000'
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Message Storage
MESSAGE_STORAGE = 'config.storage.SweetifyAwareSessionStorage'

# Application definition

INSTALLED_APPS = [
    # Admin theme
    "jazzmin",
    # Django default apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "django.contrib.sites",  # Add this line
    # Third party apps
    "crispy_forms",
    "crispy_bootstrap5",
    "phonenumber_field",
    "django_countries",
    "widget_tweaks",
    "sweetify",  # Add Sweetify to installed apps
    # Local apps
    "custom_tags",  # Add our custom template tags app
    "users.apps.UsersConfig",
    "food_listings.apps.FoodListingsConfig",
    "transactions.apps.TransactionsConfig",
    "analytics.apps.AnalyticsConfig",
    "notifications.apps.NotificationsConfig",
    "channels",
    # File cleanup
    "django_cleanup",  # Should be last in INSTALLED_APPS
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "analytics.middleware.UserActivityMiddleware",
    "users.middleware.UserIPMiddleware",  # Add this line
    "analytics.middleware.AnalyticsMiddleware",  # Add analytics tracking
    "analytics.middleware.ReportSchedulerMiddleware",  # Add the new middleware
    "analytics.middleware.AnalyticsNotificationMiddleware",  # Add this line
    "analytics.middleware.RealTimeAnalyticsMiddleware",  # Add this line
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"
ASGI_APPLICATION = "config.asgi.application"

# Database Configuration
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "surplus_food_database",
        "USER": "postgres",
        "PASSWORD": "123456",
        "HOST": "localhost",
        "PORT": "5432",
        "ATOMIC_REQUESTS": True,
        "CONN_MAX_AGE": 600,
        "OPTIONS": {
            "client_encoding": "UTF8",
        },
    }
}

# Cache configuration for analytics
CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "unique-analytics",
        "TIMEOUT": 300,  # 5 minutes
        "OPTIONS": {
            "MAX_ENTRIES": 2000,  # Increased from 1000 to handle more concurrent users
            "CULL_FREQUENCY": 2,  # More aggressive culling (removes 1/2 instead of 1/3)
        },
    },
    "analytics": {  # Dedicated cache for analytics data
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "analytics-only",
        "TIMEOUT": 60,  # 1 minute for more frequent updates (changed from 2 minutes)
        "OPTIONS": {
            "MAX_ENTRIES": 5000,  # Higher limit for analytics data
            "CULL_FREQUENCY": 2,
        },
    },
}

# Cache key prefixes to prevent collisions
CACHE_MIDDLEWARE_KEY_PREFIX = "surplus_food"
CACHE_MIDDLEWARE_SECONDS = 300  # 5 minutes default cache

# Channel layers configuration
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"  # For development
        # For production, use Redis:
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',
        # 'CONFIG': {
        #     "hosts": [('127.0.0.1', 6379)],
        # },
    }
}

# Celery Configuration
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_BEAT_SCHEDULE = {
    'export_and_train_expiry_model': {
        'task': 'analytics.tasks.export_and_train_expiry_model',
        'schedule': 3600.0,  # every hour (change as needed)
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = "static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# Media files (Uploads)
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Authentication settings
AUTH_USER_MODEL = "users.CustomUser"
LOGIN_REDIRECT_URL = "users:surplus_landing"
LOGOUT_REDIRECT_URL = "users:login"
LOGIN_URL = "users:login"
LOGOUT_URL = "users:logout"  # Add this line to override admin logout URL

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'dia.bcomp50@gmail.com'
EMAIL_HOST_PASSWORD = 'dfbt hizn uqpz ghtg'
DEFAULT_FROM_EMAIL = 'Surplus Food Distribution <dia.bcomp50@gmail.com>'
SERVER_EMAIL = 'dia.bcomp50@gmail.com'
EMAIL_TIMEOUT = 60

# Site Configuration
SITE_ID = 1
SITE_NAME = 'Surplus Food Distribution'
SITE_DOMAIN = 'localhost:8000'
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Logging Configuration
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "simple",
            "level": "DEBUG",
        },
        "file": {
            "class": "logging.FileHandler",
            "filename": "debug.log",
            "formatter": "verbose",
            "level": "DEBUG",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["console", "file"],
            "level": "INFO",
            "propagate": True,
        },
        "django.core.mail": {
            "handlers": ["console", "file"],
            "level": "DEBUG",
            "propagate": True,
        },
        "django.core.mail.backends": {
            "handlers": ["console", "file"],
            "level": "DEBUG",
            "propagate": True,
        },
        "users": {
            "handlers": ["console", "file"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}

# Jazzmin Settings
JAZZMIN_SETTINGS = {
    # title of the window
    "site_title": "Surplus Food Admin",
    # Title on the brand, and the login screen (19 chars max)
    "site_header": "Surplus Food",
    # square logo to use for your site, must be present in static files
    "site_logo": None,
    # Welcome text on the login screen
    "welcome_sign": "Welcome to Surplus Food Distribution",
    # Copyright on the footer
    "copyright": "Surplus Food Distribution",
    # The model admin to search from the search bar
    "search_model": "users.CustomUser",
    # Field name on user model that contains avatar image
    "user_avatar": None,
    # Links to put along the top menu
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Analytics", "url": "analytics:dashboard", "permissions": ["analytics.view_report"]},
    ],
    # Icons for side menu apps/models
    "icons": {
        "users.CustomUser": "fas fa-users",
        "users.BusinessProfile": "fas fa-building",
        "users.NonprofitProfile": "fas fa-hand-holding-heart",
        "users.VolunteerProfile": "fas fa-hands-helping",
        "food_listings.FoodListing": "fas fa-utensils",
        "transactions.DeliveryAssignment": "fas fa-truck",
        "analytics.Report": "fas fa-chart-bar",
        "notifications.Notification": "fas fa-bell",
    },
    # Order with respect to model registration 
    "order_with_respect_to": [
        "users",
        "food_listings",
        "transactions",
        "analytics",
        "notifications",
    ],
}

# Jazzmin UI Customizations
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-success",
    "accent": "accent-teal",
    "navbar": "navbar-dark",
    "no_navbar_border": False,
    "sidebar": "sidebar-dark-success",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": True,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "cosmo",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}

# Sweetify Settings
SWEETIFY_SWEETALERT_LIBRARY = 'sweetalert2'
