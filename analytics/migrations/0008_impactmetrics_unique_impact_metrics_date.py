# Generated by Django 5.1.6 on 2025-03-15 15:18

from django.db import migrations, models
from django.db.models import Min


def remove_duplicate_metrics(apps, schema_editor):
    ImpactMetrics = apps.get_model("analytics", "ImpactMetrics")

    # Get all dates that have duplicates
    dates_with_duplicates = (
        ImpactMetrics.objects.values("date")
        .annotate(count=models.Count("id"))
        .filter(count__gt=1)
    )

    # For each date with duplicates
    for date_info in dates_with_duplicates:
        date = date_info["date"]
        # Get all metrics for this date
        metrics = ImpactMetrics.objects.filter(date=date)

        # Keep the first record (earliest ID) and delete the rest
        first_metric_id = metrics.aggregate(Min("id"))["id__min"]
        metrics.exclude(id=first_metric_id).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("analytics", "0007_remove_report_analytics_r_report__ae8b37_idx_and_more"),
    ]

    operations = [
        # First, clean up duplicates
        migrations.RunPython(
            remove_duplicate_metrics, reverse_code=migrations.RunPython.noop
        ),
        # Then add the constraint
        migrations.AddConstraint(
            model_name="impactmetrics",
            constraint=models.UniqueConstraint(
                fields=("date",), name="unique_impact_metrics_date"
            ),
        ),
    ]
